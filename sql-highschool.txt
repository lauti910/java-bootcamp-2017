CREATE DATABASE high-school;
USE high-school;
CREATE TABLE Student(
						registrationNumber INT PRIMARY KEY,
						sFirstName VARCHAR(40),
						sLastName VARCHAR(40),
						dateOfBirth DATE,
						PRIMARY KEY(registrationNumber)
					);
CREATE TABLE Teacher(
						tFirstName VARCHAR(40),
						tLastName VARCHAR(40),
						dateOfBirth DATE,
						PRIMARY KEY(firstName),
						PRIMARY KEY(lastName)
					);
CREATE TABLE Course (
						courseName VARCHAR(40),
						teacherFirstName VARCHAR(40),
						teacherLastName VARCHAR(40),
						hoursByWeek INT,
						scheduleID INT,
						PRIMARY KEY(courseName),
						FOREIGN KEY(teacherFirstName) REFERENCES Teacher(tFirstName),
						FOREIGN KEY(teacherLastName) REFERENCES Teacher(tLastName),
						FOREIGN KEY(scheduleID) REFERENCES Schedule(scheduleID)
					);
CREATE TABLE Student-Course (
						studentCourseID INT AUTO_INCREMENT,
						studentRegNumber INT,
						courseName VARCHAR(40),
						partialNoteA INT,
						partialNoteB INT,
						partialNoteC INT,
						finalNote INT,
						PRIMARY KEY(studentCourseID),
						FOREIGN KEY(studentRegNumber) REFERENCES Student(registrationNumber),
						FOREIGN KEY(courseName) REFERENCES Course(courseName)
					);
CREATE TABLE Schedule(
						scheduleID INT,
						startTime TIME,
						finishTime TIME,
						dayOfTheWeek DATE,
						PRIMARY KEY(scheduleID)
					);
INSERT INTO Schedule (scheduleID, startTime, finishTime, dayOfTheWeek) VALUES
					(1, '15:00:00', '16:00:00', '2000-1-1');
INSERT INTO Teacher (firstName, lastName, dateOfBirth) VALUES
					('first','first', '1980-10-10'), 
					('second','second','1980-10-10'),
					('third', 'third', '1980-10-10');
INSERT INTO Course (courseName, teacherFirstName, teacherLastName, hoursByWeek, scheduleID) VALUES
					('howToUseJava', 'first', 'first', 1, 1),
					('howToUsePython', 'second', 'second', 1, 1),
					('howToUseC', 'third', 'third', 1, 1);
INSERT INTO Student (registrationNumber, firstName, lastName, dateOfBirth) VALUES
					(1, 'aaaa', 'aaaa', '1980-10-10'),
					(2, 'aaab', 'aaaa', '1980-10-10'),
					(3, 'aaba', 'aaaa', '1980-10-10'),
					(4, 'aabb', 'aaaa', '1980-10-10'),
					(5, 'abaa', 'aaaa', '1980-10-10'),
					(6, 'abab', 'aaaa', '1980-10-10'),
					(7, 'abba', 'aaaa', '1980-10-10'),
					(8, 'abbb', 'aaaa', '1980-10-10'),
					(9, 'baaa', 'aaaa', '1980-10-10'),
					(10, 'baab', 'aaaa', '1980-10-10');
INSERT INTO Student-Course (studentRegNumber, courseName, partialNoteA, partialNoteB, partialNoteC, finalNote) VALUES
					(1, 'howToUseJava'),
					(2, 'howToUseJava'),
					(3, 'howToUseJava'),
					(4, 'howToUseJava'),
					(5, 'howToUseJava'),
					(6, 'howToUseJava'),
					(7, 'howToUseJava'),
					(8, 'howToUseJava'),
					(9, 'howToUseJava'),
					(10, 'howToUseJava'),
					(1, 'howToUsePython'),
					(2, 'howToUsePython'),
					(3, 'howToUsePython'),
					(4, 'howToUsePython'),
					(5, 'howToUsePython'),
					(6, 'howToUsePython'),
					(7, 'howToUsePython'),
					(8, 'howToUsePython'),
					(9, 'howToUsePython'),
					(10, 'howToUsePython'),
					(1, 'howToUseC'),
					(2, 'howToUseC'),
					(3, 'howToUseC'),
					(4, 'howToUseC'),
					(5, 'howToUseC'),
					(6, 'howToUseC'),
					(7, 'howToUseC'),
					(8, 'howToUseC'),
					(9, 'howToUseC'),
					(10, 'howToUseC');


SELECT  courseName, tLastName, tFirstName, sLastName, sFirstName 
		FROM Student-Course
			JOIN Course ON Student-Course.courseName = Course.courseName
			JOIN Student ON Student-Course.studentRegNumber = Student.registrationNumber
		WHERE Course.courseName = <givenCourseName>
		ORDER BY courseName, sLastName, sFirstName DESC;
SELECT studentsPassed, studentsfailed 
	FROM 	(SELECT COUNT(passed)
				FROM Student-Course AS passed
				WHERE passed.finalNote >= 4
					AND courseName = <givenCourseName>
			) AS studentsPassed,
			(SELECT COUNT(failed)
				FROM Student-Course AS failed
				WHERE failed.finalNote < 4
					AND courseName = <givenCourseName>
			) as studentsfailed;
SELECT tLastName, tFirstName, DAYOFWEEK(schedule.dayOfTheWeek), schedule.startTime, schedule.finishTime, courseName
	FROM Course
		JOIN Teacher ON Course.teacherFirstName = Teacher.tFirstName
						AND Course.teacherLastName = Teacher.tLastName
		JOIN Schedule ON Course.scheduleID = Schedule.scheduleID
	WHERE Teacher.tFirstName = <givenTeacherFirstName>
		AND Teacher.tLastName = <givenTeacherLastName>
	ORDER BY DAYOFWEEK(schedule.dayOfTheWeek);